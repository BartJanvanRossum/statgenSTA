stages:
  - test
  - deploy

variables:
    APT_PKGS: "libcurl4-openssl-dev libssh2-1-dev libssl-dev libxml2-dev zlib1g-dev git build-essential gobjc++ libomp-dev libmagick++-6.q16-dev tk dialog"
    _R_CHECK_FORCE_SUGGESTS_: "false"
    TT_AT_HOME: "true"

before_script:
  - apt-get update
  - apt-get install -y --no-install-recommends ${APT_PKGS}
  - apt-get install -y --no-install-recommends qpdf pandoc pandoc-citeproc
  - export PATH="/usr/local/lib/R/site-library/littler/examples/:${PATH}"
  - echo "options(Ncpus = $(nproc --all))" >> /usr/local/lib/R/etc/Rprofile.site
  - install2.r devtools
  - RUN wget -qO- \
    "https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh" | \
    sh -s - --admin --no-path \
    && mv ~/.TinyTeX /opt/TinyTeX \
    && /opt/TinyTeX/bin/*/tlmgr path add \
    && tlmgr install metafont mfware inconsolata tex ae parskip listings \
    && tlmgr path add \
    && Rscript -e "source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()" \
    && chown -R root:staff /opt/TinyTeX \
    && chmod -R g+w /opt/TinyTeX \
    && chmod -R g+wx /opt/TinyTeX/bin \
  - r -e 'devtools::install_dev_deps()'

r-release:
  stage: test
  tags:
    - Docker
  image: rocker/r-ver:latest
  script:
    - r -e 'devtools::check(check_dir = ".")'
  artifacts:
    paths:
      - "*.Rcheck"
    name: logs
    when: always

r-devel:
  stage: test
  tags:
    - Docker
  image: rocker/r-ver:devel
  script:
    - r -e 'devtools::check(check_dir = ".")'
  artifacts:
    paths:
      - "*.Rcheck"
    name: logs
    when: always

