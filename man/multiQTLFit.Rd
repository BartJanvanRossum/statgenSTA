% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiQTLFit.R
\name{multiQTLFit}
\alias{multiQTLFit}
\title{Fit an additive multi QTL model}
\usage{
multiQTLFit(QTLDet, selection = c("backward", "none"), thr = 0.05, ...)
}
\arguments{
\item{QTLDet}{An object of class \code{\link{QTLDet}}}

\item{selection}{An integer string indicating whether backward selection should
be applied or no selection at all.}

\item{thr}{A numerical value indicating the threshold for dropping terms in
the backwards elemination process.}

\item{...}{Other parameters to be passed on to underlying functions used
for qtl detection, \code{\link[qtl]{scanone}} when \code{type} is "MR"
or "SIM" and \code{\link[qtl]{cim}} when \code{type} is "CIM".}
}
\value{
An object of class \code{\link{multiQTL}}
}
\description{
An additive multi QTL model is fitted based on the peaks in the QTLDet object.
Fitting is done using the \code{\link[qtl]{fitqtl}} function in the qtl package.
After fitting the model backward elemination is done until all markers in
the model have a significant P-value.
}
\examples{
## Read the data
F2 <- qtl::read.cross(format="csv",
                      file = system.file("extdata", "F2_maize_practical3_ex2.csv",
                      package = "RAP"),
                      genotypes = c("AA", "AB", "BB"),
                      alleles = c("A", "B"), estimate.map = FALSE)
## Perform QTL detection using simple interval mapping.
QTLDet <- QTLDetect(cross = F2, trait = "trait", type = "SIM")
## Fit the multi QTL model.
multiFit <- multiQTLFit(QTLDet)
## Create a report.
report(multiFit, outfile = "./testReports/reportMultiQTLFit.pdf")

}
\references{
Broman et al. (2003) R/qtl: QTL mapping in experimental crosses.
Bioinformatics 19:889-890
}
\seealso{
\code{\link[qtl]{fitqtl}}
}
