% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QTLDetect.R
\name{QTLDetect}
\alias{QTLDetect}
\title{QTL detection}
\usage{
QTLDetect(cross, trait, type = c("MR", "SIM", "CIM"), step = 5, thr = 3,
  window = 30, ...)
}
\arguments{
\item{cross}{An object of class cross created by the qtl package}

\item{trait}{A character string indicating the trait to be analysed.}

\item{type}{A character sting indicating the type of QTL detection to be
performed. Either "MR" (Marker Response), "SIM" (Simple Interval Mapping)
or "CIM" (Composite Interval Mapping)}

\item{step}{A numerical value indicating the maximum distance (in cM)
between positions at which the genotype probabilities are calculated. If
\code{step = 0} probabilities are only calculated at the marker locations.}

\item{thr}{A numerical value indicating a lower threshold for the lodscore
of the peaks.}

\item{window}{A numerical value indicating the window (in cM) used when
selecting peaks.}

\item{...}{Other parameters to be passed on to underlying functions used
for qtl detection, \code{\link[qtl]{scanone}} when \code{type} is "MR"
or "SIM" and \code{\link[qtl]{cim}} when \code{type} is "CIM".}
}
\value{
An object of class \code{\link{QTLDet}}.
}
\description{
This function is essentially a wrapper for \code{\link[qtl]{scanone}} and
\code{\link[qtl]{cim}} in the qtl package. Depending on \code{type} one
of these functions is used for QTL detection. After this is done, from
the set of candidate QTLs that are returned proper peaks are selected
by an iterative process using the \code{threshold} and \code{window}
provided. All resulting peaks will have a LOD score above \code{threshold}
and the distance between pairs of peaks will always be at least
the value given as \code{window}.
}
\examples{
## Read the data
F2 <- qtl::read.cross(format="csv",
                      file = system.file("extdata", "F2_maize_practical3_ex2.csv",
                      package = "RAP"),
                      genotypes = c("AA", "AB", "BB"),
                      alleles = c("A", "B"), estimate.map = FALSE)
## Perform a simple interval mapping for detecting QTLs.
QTLDet <- QTLDetect(cross = F2, trait = "trait", type = "CIM")
## Create a pdf report.
report(QTLDet, outfile = "./testReports/reportQTLDectection.pdf")

}
\references{
Broman et al. (2003) R/qtl: QTL mapping in experimental crosses.
Bioinformatics 19:889-890
}
\seealso{
\code{\link[qtl]{scanone}}, \code{\link[qtl]{cim}}
}
